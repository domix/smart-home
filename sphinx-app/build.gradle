plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'checkstyle'
    id 'com.github.spotbugs'
}

apply plugin: 'java'
apply plugin: 'jacoco'

checkstyle {
    toolVersion = '8.15'
}

spotbugs {
    toolVersion = '3.1.10'
}

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }

    // http://kent.dl.sourceforge.net/project/cmusphinx/Acoustic%20and%20Language%20Models/Russian/cmusphinx-ru-5.2.tar.gz
    ivy {
        url 'http://kent.dl.sourceforge.net'
        patternLayout {
            //This maps to the pattern: [organisation]:[module]:[revision]:[classifier]@[ext]
            artifact '/project/[organisation]/Acoustic and Language Models/Russian/[module]-[revision].[ext]'
        }
    }

    // http://kent.dl.sourceforge.net/project/cmusphinx/Acoustic%20and%20Language%20Models/Russian/zero_ru_cont_8k_v3.tar.gz
    ivy {
        url 'http://kent.dl.sourceforge.net'
        patternLayout {
            //This maps to the pattern: [organisation]:[module]:[revision]:[classifier]@[ext]
            artifact '/project/[organisation]/Acoustic and Language Models/Russian/[module]_[revision].[ext]'
        }
    }
}

configurations {
    sphinx
}

dependencies {
    sphinx group: 'cmusphinx', name: 'zero_ru_cont_8k', version: 'v3', ext: 'tar.gz'
    //sphinx group: 'cmusphinx', name: 'cmusphinx-ru', version: '5.2', ext: 'tar.gz'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter'

    compile group: 'edu.cmu.sphinx', name: 'sphinx4-core', version: '5prealpha-SNAPSHOT'
    compile group: 'edu.cmu.sphinx', name: 'sphinx4-data', version: '5prealpha-SNAPSHOT'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api'
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine'
    testRuntime files("${projectDir}/zero_ru_cont_8k_v3")
    implementation 'org.junit.jupiter:junit-jupiter-api'

    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter'
    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'junit'
    }
}

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

// To generate an HTML report instead of XML
tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
        events "passed", "skipped", "failed"
    }
}

task installRu() {
    onlyIf {
        !file("$projectDir/zero_ru_cont_8k_v3").exists()
    }
    doLast {
        final File ruTarGz = configurations.sphinx.files.find { it.name.contains('zero_ru_cont_8k') }
        println '>> Installing Russian acoustic model and Russian language...'
        exec {
            commandLine 'tar', '-xzvf', ruTarGz.path
        }
    }
}

tasks.test.dependsOn tasks.installRu