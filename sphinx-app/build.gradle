plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

apply plugin: 'java'
apply plugin: 'jacoco'

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter'

    compile group: 'edu.cmu.sphinx', name: 'sphinx4-core', version: '5prealpha-SNAPSHOT'
    compile group: 'edu.cmu.sphinx', name: 'sphinx4-data', version: '5prealpha-SNAPSHOT'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api'
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine'
    testRuntime files("${projectDir}/zero_ru_cont_8k_v3")
    implementation 'org.junit.jupiter:junit-jupiter-api'

    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'junit'
    }
}

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

// https://kent.dl.sourceforge.net/project/cmusphinx/Acoustic%20and%20Language%20Models/Russian/cmusphinx-ru-5.2.tar.gz
// https://kent.dl.sourceforge.net/project/cmusphinx/Acoustic%20and%20Language%20Models/Russian/zero_ru_cont_8k_v3.tar.gz
def ruTarGz = file("$projectDir/zero_ru_cont_8k_v3.tar.gz")

task downloadRu() {
    onlyIf {
        !ruTarGz.exists()
    }

    doLast {
        final String url = 'https://kent.dl.sourceforge.net/project/cmusphinx/Acoustic%20and%20Language%20Models/Russian/zero_ru_cont_8k_v3.tar.gz'
        println "Downloading $url"
        exec {
            commandLine 'wget', '--progress=dot:mega', url
        }
    }
}

task installRu(dependsOn: downloadRu) {
    onlyIf {
        ruTarGz.exists()
    }
    doLast {
        println 'Installing Russian acoustic model and Russian langauge...'
        exec {
            commandLine 'tar', '-xzvf', 'zero_ru_cont_8k_v3.tar.gz'
        }
    }
}