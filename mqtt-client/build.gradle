plugins {
    id 'org.springframework.boot'
    id 'com.github.kt3k.coveralls'
    id 'io.spring.dependency-management'
    id 'checkstyle'
    id 'com.github.spotbugs'
}

apply plugin: 'jacoco'
apply plugin: 'java'

checkstyle {
    toolVersion = '8.15'
}

spotbugs {
    toolVersion = '3.1.10'
}

sourceSets {
    // So that we can place source code in 'src/integrationTest/java':
    integrationTest {
        java {

            // So that we can compile against the business classes (GreeterService, ...):
            compileClasspath += main.output
            // So that we can compile against the libs used by the business classes:
            compileClasspath += main.compileClasspath

            // So that we can compile against the unit test classes (custom utilities fx):
            compileClasspath += test.output
            // So that we can compile against the libs used by the unit test classes (JUnit, Spring test support, ...):
            compileClasspath += test.compileClasspath

            // So that test- and business classes can be used at runtime:
            runtimeClasspath += test.runtimeClasspath

        }
    }
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter'
    compile group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.+'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api'
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter'
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine'
    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'junit'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task integrationTest(dependsOn: project(':mqtt-broker').tasks.upMqtt, type: Test) {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }

    // So that Gradle knows where the integration test classes are:
    testClassesDirs = sourceSets.integrationTest.output.classesDirs

    // So that Gradle knows which runtime class path to use:
    classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test
integrationTest.finalizedBy project(':mqtt-broker').tasks.stopMqtt

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

// To generate an HTML report instead of XML
tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

idea {
    module {
        testSourceDirs += sourceSets.integrationTest.java.srcDirs
        testResourceDirs += sourceSets.integrationTest.resources.srcDirs
        scopes.TEST.plus += [ configurations.integrationTestCompile ]
    }
}